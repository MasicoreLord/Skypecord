#{Main(app)} {
    #{MessageOuter(divider)}#{MessageOuter(dividerRed)} #{MessageOuter(dividerContent)} {
        color: $accent;
    }
    #{MessageOuter(divider)} #{MessageOuter(dividerContent)} {
        color: var(--skypecord-divider-fg);
    }
    #{MessageOuter(divider)}#{MessageOuter(dividerRed)} #{MessageOuter(dividerContent)}::before,
    #{MessageOuter(divider)}#{MessageOuter(dividerRed)} #{MessageOuter(dividerContent)}::after {
        opacity: 1;
    }
    #{Messages(dividerEnabled)} {
        border-bottom-color: transparent;
    }
    #{$message-markup} {
        background-color: var(--skypecord-message-bg);
    }
    #{$message-isMentioned} {
        background-color: transparent;
    }
    #{$message-isMentioned} #{$message-markup} {
        background-color: $mentioned-bg;
    }
    #{$channelTextArea-inner} {
        background-color: var(--skypecord-textarea-bg);
    }

    #{$channelTextArea-text}::placeholder {
        color: var(--skypecord-placeholder-fg);
    }
    
}

#{$message-container} {
    display: inline-flex;
    flex-direction: row;
    max-width: 100%; /* Caps width to prevent it from flowing out, overflow didn't work there */
}

#{$message-buttonContainer} {
    float: none;
    align-self: flex-start;
}

#{$message-markup} {
    border-radius: 0px 10px 10px 0px;
    padding: 8px;
    order: -1;
    overflow: hidden; /* Prevents the markup from overflowing, and also allows the buttons to appear at all times. */
}

#{$message-markup}:empty {
    display: none;
}

#{$message-markup} pre {
    max-width: fit-content;
}

#{$message}:last-of-type #{$message-markup} {
    border-radius: 0px 10px 10px 10px;
}

#{$message-isMentionedCozy}::after {
    display: none;
}

#{$message-isMentionedCozy} #{$message-markup}::after {
    position: absolute;
    left: 3px;
    top: 2px;
    bottom: 4px;
    width: 1px;
    border-left: 4px solid #f1b449;
    border-radius: 0px 0px 0px 10px;
    content: '';
}

#{MessageOuter(dividerContent)}::before,
#{MessageOuter(dividerContent)}::after {
    height: 2px;
}

#{MessageOuter(dividerContent)}::before {
    margin-right: 15px;
}

#{MessageOuter(dividerContent)}::after {
    margin-left: 15px;
}

#{MessageOuter(divider)} {
    font-size: 12px;
}

#{MessageOuter(divider)}#{MessageOuter(dividerRed)} #{MessageOuter(dividerContent)} {
    text-transform: capitalize;
}

#{TextAreaContainer(channelTextArea)} {
    border-top-color: transparent;
}

#{TextAreaContainer(inner)} {
    min-height: 60px;
    border-radius: 10px;
    align-items: center;
    #{TextAreaContainer(buttons)} {
        order: 1;
    }
    textarea {
        order: 2;
    }
    #{Property(flex)} {
        order: 3;
    }
}

/* Reposition attach popout to compensate for re-ordered message box */
#{$popouts-popoutTopLeft}[style$='transform: translateX(0%) translateY(-100%) translateZ(0px);'] {
    transform: translateX(calc(-100% + 43px)) translateY(-100%) translateZ(0px)!important;
    margin-right: -20px;
}

#{$popouts-popoutTopRight}[style$='translateX(-100%) translateY(-100%) translateZ(0px);'] {
    transform: translateX(-43px) translateY(-100%) translateZ(0px)!important;
}